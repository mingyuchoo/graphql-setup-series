### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BatchPayload {
  count: Int!
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Category {
  id: Int!
  name: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
}

input CategoryCreateInput {
  name: String!
  posts: PostCreateManyWithoutCategoriesInput
}

input CategoryCreateManyWithoutPostsInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutpostsInput!]
  create: [CategoryCreateWithoutPostsInput!]
}

input CategoryCreateOrConnectWithoutpostsInput {
  create: CategoryCreateWithoutPostsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryCreateWithoutPostsInput {
  name: String!
}

input CategoryListRelationFilter {
  every: CategoryWhereInput
  none: CategoryWhereInput
  some: CategoryWhereInput
}

input CategoryOrderByInput {
  id: SortOrder
  name: SortOrder
}

input CategoryScalarWhereInput {
  AND: [CategoryScalarWhereInput!]
  id: IntFilter
  name: StringFilter
  NOT: [CategoryScalarWhereInput!]
  OR: [CategoryScalarWhereInput!]
}

input CategoryUpdateInput {
  name: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutCategoriesInput
}

input CategoryUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateManyWithoutPostsInput {
  connect: [CategoryWhereUniqueInput!]
  connectOrCreate: [CategoryCreateOrConnectWithoutpostsInput!]
  create: [CategoryCreateWithoutPostsInput!]
  delete: [CategoryWhereUniqueInput!]
  deleteMany: [CategoryScalarWhereInput!]
  disconnect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutPostsInput!]
  updateMany: [CategoryUpdateManyWithWhereWithoutPostsInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutPostsInput!]
}

input CategoryUpdateManyWithWhereWithoutPostsInput {
  data: CategoryUpdateManyMutationInput!
  where: CategoryScalarWhereInput!
}

input CategoryUpdateWithoutPostsInput {
  name: StringFieldUpdateOperationsInput
}

input CategoryUpdateWithWhereUniqueWithoutPostsInput {
  data: CategoryUpdateWithoutPostsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryUpsertWithWhereUniqueWithoutPostsInput {
  create: CategoryCreateWithoutPostsInput!
  update: CategoryUpdateWithoutPostsInput!
  where: CategoryWhereUniqueInput!
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  id: IntFilter
  name: StringFilter
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  posts: PostListRelationFilter
}

input CategoryWhereUniqueInput {
  id: Int
}

type Comment {
  content: String
  id: Int!
  post: Post
  postId: Int
  title: String!
}

input CommentCreateInput {
  content: String
  post: PostCreateOneWithoutCommentsInput
  title: String!
}

input CommentCreateManyWithoutPostInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  create: [CommentCreateWithoutPostInput!]
}

input CommentCreateOrConnectWithoutpostInput {
  create: CommentCreateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutPostInput {
  content: String
  title: String!
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

input CommentOrderByInput {
  content: SortOrder
  id: SortOrder
  postId: SortOrder
  title: SortOrder
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  content: StringNullableFilter
  id: IntFilter
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  postId: IntNullableFilter
  title: StringFilter
}

input CommentUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  post: PostUpdateOneWithoutCommentsInput
  title: StringFieldUpdateOperationsInput
}

input CommentUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CommentUpdateManyWithoutPostInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutpostInput!]
  create: [CommentCreateWithoutPostInput!]
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutPostInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutPostInput!]
}

input CommentUpdateManyWithWhereWithoutPostInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateWithoutPostInput {
  content: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input CommentUpdateWithWhereUniqueWithoutPostInput {
  data: CommentUpdateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutPostInput {
  create: CommentCreateWithoutPostInput!
  update: CommentUpdateWithoutPostInput!
  where: CommentWhereUniqueInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  content: StringNullableFilter
  id: IntFilter
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  post: PostWhereInput
  postId: IntNullableFilter
  title: StringFilter
}

input CommentWhereUniqueInput {
  id: Int
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  createComment(data: CommentCreateInput!): Comment!
  createDraft(authorId: String!, content: String, title: String!): Post
  createPost(data: PostCreateInput!): Post!
  createProfile(data: ProfileCreateInput!): Profile!
  createTag(data: TagCreateInput!): Tag!
  createUser(data: UserCreateInput!): User!
  deleteCategories(where: CategoryWhereInput): BatchPayload!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteComments(where: CommentWhereInput): BatchPayload!
  deletePost(where: PostWhereUniqueInput!): Post
  deletePosts(where: PostWhereInput): BatchPayload!
  deleteProfile(where: ProfileWhereUniqueInput!): Profile
  deleteProfiles(where: ProfileWhereInput): BatchPayload!
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteTags(where: TagWhereInput): BatchPayload!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: UserWhereInput): BatchPayload!
  updateCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateComments(data: CommentUpdateManyMutationInput!, where: CommentWhereInput): BatchPayload!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updatePosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  updateProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile
  updateProfiles(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Post {
  author: User
  authorId: Int
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int): [Category!]!
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  content: String
  createdAt: DateTime!
  id: Int!
  keywords: [String!]!
  published: Boolean!
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int): [Tag!]!
  title: String!
  uppercaseTitle: String
}

input PostCreateInput {
  author: UserCreateOneWithoutPostsInput
  categories: CategoryCreateManyWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String
  createdAt: DateTime
  keywords: PostCreatekeywordsInput
  published: Boolean
  tags: TagCreateManyWithoutPostsInput
  title: String!
}

input PostCreatekeywordsInput {
  set: [String!]
}

input PostCreateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
}

input PostCreateManyWithoutCategoriesInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutcategoriesInput!]
  create: [PostCreateWithoutCategoriesInput!]
}

input PostCreateManyWithoutTagsInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithouttagsInput!]
  create: [PostCreateWithoutTagsInput!]
}

input PostCreateOneWithoutCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  create: PostCreateWithoutCommentsInput
}

input PostCreateOrConnectWithoutauthorInput {
  create: PostCreateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutcategoriesInput {
  create: PostCreateWithoutCategoriesInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutcommentsInput {
  create: PostCreateWithoutCommentsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithouttagsInput {
  create: PostCreateWithoutTagsInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutAuthorInput {
  categories: CategoryCreateManyWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String
  createdAt: DateTime
  keywords: PostCreatekeywordsInput
  published: Boolean
  tags: TagCreateManyWithoutPostsInput
  title: String!
}

input PostCreateWithoutCategoriesInput {
  author: UserCreateOneWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String
  createdAt: DateTime
  keywords: PostCreatekeywordsInput
  published: Boolean
  tags: TagCreateManyWithoutPostsInput
  title: String!
}

input PostCreateWithoutCommentsInput {
  author: UserCreateOneWithoutPostsInput
  categories: CategoryCreateManyWithoutPostsInput
  content: String
  createdAt: DateTime
  keywords: PostCreatekeywordsInput
  published: Boolean
  tags: TagCreateManyWithoutPostsInput
  title: String!
}

input PostCreateWithoutTagsInput {
  author: UserCreateOneWithoutPostsInput
  categories: CategoryCreateManyWithoutPostsInput
  comments: CommentCreateManyWithoutPostInput
  content: String
  createdAt: DateTime
  keywords: PostCreatekeywordsInput
  published: Boolean
  title: String!
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByInput {
  authorId: SortOrder
  content: SortOrder
  createdAt: SortOrder
  id: SortOrder
  keywords: SortOrder
  published: SortOrder
  title: SortOrder
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  authorId: IntNullableFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  keywords: StringNullableListFilter
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  published: BoolFilter
  title: StringFilter
}

input PostUpdateInput {
  author: UserUpdateOneWithoutPostsInput
  categories: CategoryUpdateManyWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdatekeywordsInput {
  set: [String!]
}

input PostUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateManyWithoutAuthorInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutauthorInput!]
  create: [PostCreateWithoutAuthorInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [PostUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateManyWithoutCategoriesInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutcategoriesInput!]
  create: [PostCreateWithoutCategoriesInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [PostUpdateManyWithWhereWithoutCategoriesInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input PostUpdateManyWithoutTagsInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithouttagsInput!]
  create: [PostCreateWithoutTagsInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutTagsInput!]
  updateMany: [PostUpdateManyWithWhereWithoutTagsInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutTagsInput!]
}

input PostUpdateManyWithWhereWithoutAuthorInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutCategoriesInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutTagsInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateOneWithoutCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutcommentsInput
  create: PostCreateWithoutCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: PostUpdateWithoutCommentsInput
  upsert: PostUpsertWithoutCommentsInput
}

input PostUpdateWithoutAuthorInput {
  categories: CategoryUpdateManyWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutCategoriesInput {
  author: UserUpdateOneWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutCommentsInput {
  author: UserUpdateOneWithoutPostsInput
  categories: CategoryUpdateManyWithoutPostsInput
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  tags: TagUpdateManyWithoutPostsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithoutTagsInput {
  author: UserUpdateOneWithoutPostsInput
  categories: CategoryUpdateManyWithoutPostsInput
  comments: CommentUpdateManyWithoutPostInput
  content: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  keywords: PostUpdatekeywordsInput
  published: BoolFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  data: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutCategoriesInput {
  data: PostUpdateWithoutCategoriesInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutTagsInput {
  data: PostUpdateWithoutTagsInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutCommentsInput {
  create: PostCreateWithoutCommentsInput!
  update: PostUpdateWithoutCommentsInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  create: PostCreateWithoutAuthorInput!
  update: PostUpdateWithoutAuthorInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutCategoriesInput {
  create: PostCreateWithoutCategoriesInput!
  update: PostUpdateWithoutCategoriesInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutTagsInput {
  create: PostCreateWithoutTagsInput!
  update: PostUpdateWithoutTagsInput!
  where: PostWhereUniqueInput!
}

input PostWhereInput {
  AND: [PostWhereInput!]
  author: UserWhereInput
  authorId: IntNullableFilter
  categories: CategoryListRelationFilter
  comments: CommentListRelationFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  keywords: StringNullableListFilter
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  published: BoolFilter
  tags: TagListRelationFilter
  title: StringFilter
}

input PostWhereUniqueInput {
  id: Int
}

type Profile {
  bio: String!
  id: Int!
  user: User!
}

input ProfileCreateInput {
  bio: String!
  user: UserCreateOneWithoutProfileInput!
}

input ProfileCreateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
}

input ProfileCreateOrConnectWithoutuserInput {
  create: ProfileCreateWithoutUserInput!
  where: ProfileWhereUniqueInput!
}

input ProfileCreateWithoutUserInput {
  bio: String!
}

input ProfileOrderByInput {
  bio: SortOrder
  id: SortOrder
  userId: SortOrder
}

input ProfileUpdateInput {
  bio: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateManyMutationInput {
  bio: StringFieldUpdateOperationsInput
}

input ProfileUpdateOneWithoutUserInput {
  connect: ProfileWhereUniqueInput
  connectOrCreate: ProfileCreateOrConnectWithoutuserInput
  create: ProfileCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: ProfileUpdateWithoutUserInput
  upsert: ProfileUpsertWithoutUserInput
}

input ProfileUpdateWithoutUserInput {
  bio: StringFieldUpdateOperationsInput
}

input ProfileUpsertWithoutUserInput {
  create: ProfileCreateWithoutUserInput!
  update: ProfileUpdateWithoutUserInput!
}

input ProfileWhereInput {
  AND: [ProfileWhereInput!]
  bio: StringFilter
  id: IntFilter
  NOT: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  user: UserWhereInput
  userId: IntFilter
}

input ProfileWhereUniqueInput {
  id: Int
}

type Query {
  categories(after: CategoryWhereUniqueInput, before: CategoryWhereUniqueInput, first: Int, last: Int, orderBy: [CategoryOrderByInput!], where: CategoryWhereInput): [Category!]!
  category(where: CategoryWhereUniqueInput!): Category
  comment(where: CommentWhereUniqueInput!): Comment
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int, orderBy: [CommentOrderByInput!], where: CommentWhereInput): [Comment!]!
  countPosts(published: Boolean!, title: String): Int
  countUsers(firstName: String, lastName: String): Int
  post(where: PostWhereUniqueInput!): Post
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByInput!], where: PostWhereInput): [Post!]!
  profile(where: ProfileWhereUniqueInput!): Profile
  profiles(after: ProfileWhereUniqueInput, before: ProfileWhereUniqueInput, first: Int, last: Int, orderBy: [ProfileOrderByInput!], where: ProfileWhereInput): [Profile!]!
  tag(where: TagWhereUniqueInput!): Tag
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, orderBy: [TagOrderByInput!], where: TagWhereInput): [Tag!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum Role {
  ADMIN
  USER
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableListFilter {
  equals: [String!]
}

type Tag {
  name: String!
}

input TagCreateInput {
  name: String!
  posts: PostCreateManyWithoutTagsInput
}

input TagCreateManyWithoutPostsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutpostsInput!]
  create: [TagCreateWithoutPostsInput!]
}

input TagCreateOrConnectWithoutpostsInput {
  create: TagCreateWithoutPostsInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutPostsInput {
  name: String!
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagOrderByInput {
  name: SortOrder
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  name: StringFilter
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
}

input TagUpdateInput {
  name: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutTagsInput
}

input TagUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
}

input TagUpdateManyWithoutPostsInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutpostsInput!]
  create: [TagCreateWithoutPostsInput!]
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutPostsInput!]
  updateMany: [TagUpdateManyWithWhereWithoutPostsInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutPostsInput!]
}

input TagUpdateManyWithWhereWithoutPostsInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateWithoutPostsInput {
  name: StringFieldUpdateOperationsInput
}

input TagUpdateWithWhereUniqueWithoutPostsInput {
  data: TagUpdateWithoutPostsInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutPostsInput {
  create: TagCreateWithoutPostsInput!
  update: TagUpdateWithoutPostsInput!
  where: TagWhereUniqueInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  name: StringFilter
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  posts: PostListRelationFilter
}

input TagWhereUniqueInput {
  name: String
}

type User {
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  profile: Profile
  role: Role!
}

input UserCreateInput {
  email: String!
  firstName: String!
  lastName: String!
  posts: PostCreateManyWithoutAuthorInput
  profile: ProfileCreateOneWithoutUserInput
  role: Role
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateOneWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutprofileInput
  create: UserCreateWithoutProfileInput
}

input UserCreateOrConnectWithoutpostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutprofileInput {
  create: UserCreateWithoutProfileInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostsInput {
  email: String!
  firstName: String!
  lastName: String!
  profile: ProfileCreateOneWithoutUserInput
  role: Role
}

input UserCreateWithoutProfileInput {
  email: String!
  firstName: String!
  lastName: String!
  posts: PostCreateManyWithoutAuthorInput
  role: Role
}

input UserOrderByInput {
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  lastName: SortOrder
  role: SortOrder
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  profile: ProfileUpdateOneWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutProfileInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutprofileInput
  create: UserCreateWithoutProfileInput
  update: UserUpdateWithoutProfileInput
  upsert: UserUpsertWithoutProfileInput
}

input UserUpdateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateWithoutPostsInput {
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  profile: ProfileUpdateOneWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpdateWithoutProfileInput {
  email: StringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutAuthorInput
  role: EnumRoleFieldUpdateOperationsInput
}

input UserUpsertWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  update: UserUpdateWithoutPostsInput!
}

input UserUpsertWithoutProfileInput {
  create: UserCreateWithoutProfileInput!
  update: UserUpdateWithoutProfileInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: StringFilter
  firstName: StringFilter
  id: IntFilter
  lastName: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  posts: PostListRelationFilter
  profile: ProfileWhereInput
  role: EnumRoleFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
